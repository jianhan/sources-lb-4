version: '3.3'
services:
  scrape:
    # The first directive in the web service is to build the image based on our Dockerfile. This will recreate the image we used before, but it will now be named according to the project we are in
    build: .
    # command will start the application
    command: npm run scrape
    # This section will mount paths between the host and the container.
    volumes:
      # This will mount the root directory to our working directory in the container.
      - .:/usr/app/
      # his will mount the node_modules directory to the host machine using the buildtime directory.
      - /usr/app/node_modules
    depends_on:
      - mysql
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'sources-lb-4'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'root'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'root'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - mysql-volumn:/var/lib/mysql
# Names our volume
volumes:
  mysql-volumn:
